<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.first.mapper.TrainerMapper">

	<select id="select" parameterType="String"
		resultType="trainerVO">
		SELECT * FROM trainer WHERE id=#{id}
	</select>
	<select id="selectall" resultType="trainerVO">
		SELECT * FROM trainer
	</select>
<!-- email로 선택-->
	<select id="selectbyemail" resultType="trainerVO">
		SELECT * FROM trainer WHERE email=#{email}
	</select>
<!-- email로 email 선택-->
	<select id="selectemailbyemail" resultType="String">
		SELECT email FROM trainer WHERE email=#{email}
	</select>

<!-- status가 '수락'인 트레이너 목록-->
	<select id="selectauthorized" resultType="trainerVO">
		SELECT * FROM trainer
		WHERE status='수락';
	</select>
<!-- status별 트레이너 데이터 개수-->
	<select id="selectcnt" resultType="int">
		SELECT COUNT(*) FROM trainer
			<if test="(status != null) and (status != 'all')">
				WHERE status = #{status}
			</if>
	</select>
<!-- 페이지별 select-->
	<select id="selectbypage" resultType="trainerVO">
		<choose>
			<when test="orderBy != null">
				SELECT row_number() over(order by ${orderBy}) as rownum,
			</when>
			<when test="orderBy == null">
				SELECT row_number() over(order by num desc) as rownum,
			</when>
		</choose>
		id, pwd, name, gender, major, gym_name, gym_zip, gym_addr1, profile1, regdate, level, status FROM trainer
			<if test="status == 'all'">
				ORDER BY status = '탈퇴' ASC, rownum
			</if>
			<if test='(status != null) and (status != "") and (status != "all")'>
				WHERE status = #{status}
				ORDER BY rownum
			</if>
			LIMIT #{offset}, #{amount}
	</select>
<!-- 등록된 major -->
	<select id="selectmajor" resultType="majorVO">
		SELECT DISTINCT major FROM trainer;
	</select>
<!-- status 목록 -->
	<select id="selectstatus" resultType="statusVO">
		SELECT DISTINCT status FROM trainer_status;
	</select>
<!-- name, phone으로 id 찾기-->
	<select id="selectbynamephone" resultType="String">
		SELECT id FROM trainer WHERE name=#{name} AND phone=#{phone}
	</select>
<!-- id, email로 email 찾기 -->
	<select id="selectbyidemail" resultType="String">
		SELECT email FROM trainer
		WHERE id=#{id} AND email=#{email}
	</select>

<!-- 검색 -->
	<select id="search" resultType="trainerVO">
		SELECT * FROM trainer
		WHERE status = '수락'
		<choose>
			<when test = '(loc != null AND loc != "") AND (major != null AND major != "")'>
				AND (gym_addr1 LIKE CONCAT('%',#{loc},'%') OR gym_addr2 LIKE CONCAT('%',#{loc},'%'))
				AND major = #{major};
			</when>
			<when test = '(loc != null AND loc != "") AND (major == null OR major == "")'>
				AND (gym_addr1 LIKE CONCAT('%',#{loc},'%') OR gym_addr2 LIKE CONCAT('%',#{loc},'%'))
			</when>
			<when test = '(loc == null OR loc == "") AND (major != null AND major != "")'>
				AND major = #{major};
			</when>
		</choose>
	</select>

	<insert id="insert" parameterType="trainerVO">
		INSERT INTO trainer VALUES(#{id},#{pwd},#{name},#{phone},#{email},#{gender},#{major},
		#{gym_name},#{gym_zip},#{gym_addr1},#{gym_addr2},#{intro},#{career},
		#{license1},#{license2},#{license3},default,NULL,
		#{profile1},#{profile2},#{profile3},NOW(),default, NULL)
	</insert>
<!-- update: 개별 상태 update-->
	<update id="updatestatus" parameterType="trainerVO">
		UPDATE trainer SET
		status=#{status}
		<if test="(status_detail != null) and (status_detail != '')">
		, status_detail=#{status_detail}
		</if>
		WHERE id=#{id};
	</update>
	<update id="update" parameterType="trainerVO">
		UPDATE trainer SET
		pwd=#{pwd},phone=#{phone},email=#{email},gender=#{gender},major=#{major},
		gym_name=#{gym_name},gym_zip=#{gym_zip},gym_addr1=#{gym_addr1},gym_addr2=#{gym_addr2},intro=#{intro},career=#{career},
		license1=#{license1},license2=#{license2},license3=#{license3},status=#{status},status_detail=#{status_detail},
		profile1=#{profile1},profile2=#{profile2},profile3=#{profile3},level=#{level} WHERE id=#{id}
	</update>
	
	<!-- 트레이너 profile -->
	<update id="updateProfile" parameterType="trainerVO">
		UPDATE trainer SET
		intro=#{intro},career=#{career},profile1=#{profile1},profile2=#{profile2},
		profile3=#{profile3} WHERE id=#{id}
	</update>
	
	<!-- 트레이너 account -->
	<update id="updateAccount" parameterType="trainerVO">
		UPDATE trainer SET name=#{name},
		pwd=#{pwd},phone=#{phone},email=#{email},major=#{major},
		gym_name=#{gym_name},gym_zip=#{gym_zip},gym_addr1=#{gym_addr1},gym_addr2=#{gym_addr2}
		WHERE id=#{id}
	</update>
	
	<!-- 비밀번호 -->
	<update id="updatepwd" parameterType="trainerVO">
		UPDATE trainer SET PWD=#{pwd} WHERE email=#{email};
	</update>
	
	<delete id="delete" parameterType="String">
		DELETE FROM trainer WHERE id=#{id}
	</delete>

</mapper>